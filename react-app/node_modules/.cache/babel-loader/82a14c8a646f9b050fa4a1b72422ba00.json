{"ast":null,"code":"var _jsxFileName = \"/Users/eklavyasharma/Documents/GitHub/react-url-shortner/react-app/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport Topbar from \"./sub-components/Topbar\";\nimport Bottombar from \"./sub-components/Bottombar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const alert = document.getElementById(\"alert\");\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   if (password === confirmPassword) {\n  //     const connect = await fetch(\"localhost:3000/sign-up\", {\n  //       method: \"POST\",\n  //       body: JSON.stringify({ fullName, email, password }),\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //     });\n  //     const res = await connect.json();\n  //     handleErrors(res, connect);\n  //   } else {\n  //     handleAlerts(\"alert-danger\");\n  //     alert.innerText = \"Password does not match\";\n  //   }\n  //   e.target.reset();\n  // };\n  // const handleErrors = (res, connect) => {\n  //   if (connect.status === 500) {\n  //     const { fullName, email, password } = res;\n  //     handleAlerts(\"alert-danger\");\n  //     alert.innerText = `${fullName} ${email} ${password}`;\n  //   } else if (connect.status === 200) {\n  //     handleAlerts(\"alert-success\");\n  //     alert.innerText = \"User registration successful\";\n  //   }\n  // };\n  // const handleAlerts = (action) => {\n  //   alert.classList.remove(\"hidden\");\n  //   if (action === \"alert-success\") {\n  //     alert.classList.remove(\"alert-danger\");\n  //     alert.classList.add(\"alert-success\");\n  //   } else if (action === \"alert-danger\") {\n  //     alert.classList.add(\"alert-danger\");\n  //     alert.classList.remove(\"alert-success\");\n  //   }\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const connect = await fetch(\"http://localhost:4500/sign-up\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          fullName,\n          email,\n          password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const res = await connect.json();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign up / Mini Urls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Topbar, {\n      value: \"Login\",\n      link: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 form-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bulb-img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/imgs/light-bulb.jpg\",\n              alt: \"light-bulb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 form-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"row g-3 mx-auto p-4\",\n            style: {\n              maxWidth: \"24rem\"\n            },\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"h2 p-2\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"alert\",\n              className: \"alert text-center hidden\",\n              role: \"alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputFulltName\",\n                className: \"form-label\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"inputFullName\",\n                \"aria-describedby\": \"fullName\",\n                onChange: e => setFullName(e.target.value),\n                value: fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputEmail\",\n                className: \"form-label\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"inputEmail\",\n                \"aria-describedby\": \"emailHelp\",\n                onChange: e => setEmail(e.target.value),\n                value: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputPassword1\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"inputPassword1\",\n                onChange: e => setPassword(e.target.value),\n                minLength: \"6\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputPassword2\",\n                className: \"form-label\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"inputPassword2\",\n                onChange: e => setConfirmPassword(e.target.value),\n                minLength: \"6\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"emailHelp\",\n              className: \"form-text\",\n              children: \"We'll never share your information with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 col-md-6 form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: \"check\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"check\",\n                children: \"I agree to the T&C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"button btn btn-primary w-100\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bottombar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"9s4GU4suwDpmooEG43oeeMX9mec=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/eklavyasharma/Documents/GitHub/react-url-shortner/react-app/src/components/Signup.js"],"names":["useState","Helmet","Topbar","Bottombar","Signup","alert","document","getElementById","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","connect","fetch","method","body","JSON","stringify","headers","res","json","err","console","log","maxWidth","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport Topbar from \"./sub-components/Topbar\";\nimport Bottombar from \"./sub-components/Bottombar\";\n\nfunction Signup() {\n  const alert = document.getElementById(\"alert\");\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   if (password === confirmPassword) {\n  //     const connect = await fetch(\"localhost:3000/sign-up\", {\n  //       method: \"POST\",\n  //       body: JSON.stringify({ fullName, email, password }),\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //     });\n  //     const res = await connect.json();\n  //     handleErrors(res, connect);\n  //   } else {\n  //     handleAlerts(\"alert-danger\");\n  //     alert.innerText = \"Password does not match\";\n  //   }\n  //   e.target.reset();\n  // };\n\n  // const handleErrors = (res, connect) => {\n  //   if (connect.status === 500) {\n  //     const { fullName, email, password } = res;\n  //     handleAlerts(\"alert-danger\");\n  //     alert.innerText = `${fullName} ${email} ${password}`;\n  //   } else if (connect.status === 200) {\n  //     handleAlerts(\"alert-success\");\n  //     alert.innerText = \"User registration successful\";\n  //   }\n  // };\n\n  // const handleAlerts = (action) => {\n  //   alert.classList.remove(\"hidden\");\n  //   if (action === \"alert-success\") {\n  //     alert.classList.remove(\"alert-danger\");\n  //     alert.classList.add(\"alert-success\");\n  //   } else if (action === \"alert-danger\") {\n  //     alert.classList.add(\"alert-danger\");\n  //     alert.classList.remove(\"alert-success\");\n  //   }\n  // };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const connect = await fetch(\"http://localhost:4500/sign-up\", {\n        method: \"POST\",\n        body: JSON.stringify({ fullName, email, password }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      const res = await connect.json();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Sign up / Mini Urls</title>\n      </Helmet>\n      <Topbar value=\"Login\" link=\"/login\"></Topbar>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 form-container\">\n            <div className=\"bulb-img\">\n              <img src=\"/imgs/light-bulb.jpg\" alt=\"light-bulb\" />\n            </div>\n          </div>\n          <div className=\"col-lg-6 form-container\">\n            <form\n              className=\"row g-3 mx-auto p-4\"\n              style={{ maxWidth: \"24rem\" }}\n              onSubmit={handleSubmit}\n            >\n              <h1 className=\"h2 p-2\">Sign up</h1>\n              {/* Alerts */}\n              <div\n                id=\"alert\"\n                className=\"alert text-center hidden\"\n                role=\"alert\"\n              ></div>\n              <div className=\"mb-3 col-md-6\">\n                <label htmlFor=\"inputFulltName\" className=\"form-label\">\n                  Full Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"inputFullName\"\n                  aria-describedby=\"fullName\"\n                  onChange={(e) => setFullName(e.target.value)}\n                  value={fullName}\n                />\n              </div>\n              <div className=\"mb-3 col-md-6\">\n                <label htmlFor=\"inputEmail\" className=\"form-label\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"inputEmail\"\n                  aria-describedby=\"emailHelp\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n              <div className=\"mb-3 col-md-6\">\n                <label htmlFor=\"inputPassword1\" className=\"form-label\">\n                  Password\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"inputPassword1\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  minLength=\"6\"\n                  required\n                />\n              </div>\n              <div className=\"mb-3 col-md-6\">\n                <label htmlFor=\"inputPassword2\" className=\"form-label\">\n                  Confirm Password\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"inputPassword2\"\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  minLength=\"6\"\n                  required\n                />\n              </div>\n              <div id=\"emailHelp\" className=\"form-text\">\n                We'll never share your information with anyone else.\n              </div>\n              <div className=\"mb-3 col-md-6 form-check\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"check\"\n                  required\n                />\n                <label className=\"form-check-label\" htmlFor=\"check\">\n                  I agree to the T&C\n                </label>\n              </div>\n              <div className=\"mb-3 col-md-6\">\n                <button type=\"submit\" className=\"button btn btn-primary w-100\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <Bottombar />\n    </>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}